Операторы:

=> - Импликация - корневой оператор для описания правила, содержит операнды
  1-й - терминал (проперти) или логический оператор описывающий условие
  2-й - терминал (проперти) описывающий заключение (факт)
для оператора может быть определена вероятность, если не определна, то равняется 1

& - Коньюнкция - логический оператор который может использоваться как при описании правила, так и факта, содержит операнды
  1-й - терминал или логический оператор
  n-й - терминал или логический оператор
для оператора может быть определена вероятность, если не определна, то равняется произведению вероятностей всех операндов

| - Дизьюнкция - логический оператор который может использоваться как при описании правила, так и факта, содержит операнды
  1-й - терминал или логический оператор
  n-й - терминал или логический оператор
для оператора может быть определена вероятность, если не определна, то равняется сумме вероятностей всех операндов

^ - Отрицание - логический оператор который может использоваться как при описании правила, так и факта, содержит операнды
  1-й - терминал или логический оператор
вероятность данного оператора всегда 1-p (probability of logical operator)

prop - Проперти - терминал, использщуемый для описания значений свойств объектов, может использоваться для описания правил и фактов, содержит следующие операнды:
  1-й - переменная или константа определяющая класс 
  2-й - константа определяющая название проперти
  3-й - константа or reference определяющая значение проперти
для оператора может быть определена вероятность, если не определна, то равняется 1

val(equals?) - Значение переменной - терминал, используемый для определения значений переменных, может использоваться для описания правил и фактов, содержит операнды:
  1-й - переменная
  2-й - значений переменной
для оператора может быть определена вероятность, если не определна, то равняется 1

target - терминал, определяет конечную цель логический вычислений, может использоваться только при описании правил, причем в только в качестве 2-го (правого) операнда оператора Имплементация 
вероятность всегда 1



Алгоритм 1:

Входные данные: 
  Факты - список F фактов
  Правила - список R правил

Промежуточные данные
  Нормализованные правила - список Rn (Rn <= R) правил, у каждого из которых 2-й (правый) операнд содержит target
  Факты удовлетворяющие правилам список из Fr фактов (Fr <= F)

Алгоритм обработки
1)Для каждого Правила осуществляем попытку его нормализации, все нормализованные правила помещаем в список "Нормализованные правила"
2)Для каждого Нормализованного правила выполняем:
2.2)Сравнение 1-го (левого) операнда с каждым из фактов
2.3)Если факт и 1-й операнд равны, то вычисляем вероятность, и помещаем факт в список "Факты удовлетворяющие правилам"
3)Расчитываем общую вероятность - нужно подумать как  

Сложность алгоритма:
1)R*R
2)Rn * F
3)Fr
R*R + Rn * F + Fr
R*R + R * F + F
R * (R+F) + F


Зависимые алгоритмы:

I - Нормализация правила
1)Если 2-й операнд = target, то данное правило нормализовано
2)В противном случае для каждого правила (Ri) сравниваем 1-й операнд со вторым операндом текущего (Rs) 
2.1)Для каждого найденного соотвествия, создаем новое правило Rni где 1-й операнд берется из правила Rs, а 2-й операнд на 2-й операнд из правила Ri
2.2)Если 1-й и 2-й операнд правила Rni идентичны, то его удаляем так как оно приведет к зацикливанию алгоритма
3)Для каждого правила Rni повторяем пункты 1-2

Сложность алгоритма: N, где N - кол-во изначальных правил 


II - Сравнение фактов 


III - Вычисление вероятности


IV - Вычисление общей вероятности


A->B
B->C
B->D
C->Target

A->C
A->D 

A->Target
A->D

----------------

A->B
B->C
B->D
C->Target
D->A

A->C
A->D 

A->Target
A->A

----------------
A->B
B->C
C->D
D->Target

A->C

A->D

A->Target


Вопросы: 
1)Определение значений переменных в какой момент и для чего (правила, факт) может быть определено (Please see unifcation)    
2)Как должна вычисляться итоговая веротяность?
Ответ: среднее орифмитическое для каждого факта, затем перемножением вероятностей 

